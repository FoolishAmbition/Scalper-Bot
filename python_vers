import time
from playwright.sync_api import sync_playwright
import re

bought = 0

#Blocks unnecessary resources (webfonts, JS, CSS, images) for faster loading
def block_resources(route):
    if route.request.resource_type in ["image", "stylesheet", "font", "script"]:
        route.abort()
    else:
        route.continue_()


while bought < 1:
    with sync_playwright() as p:
        # Launch browser
        browser = p.chromium.launch(headless=True)  # Set `True` to run headless
        context = browser.new_context()
        page = context.new_page()
        print("new blank page loaded")

        # Block images, stylesheets, fonts, and scripts for faster loading
        context.route("**/*", block_resources)
        print("blocked unnecessary resources for fast loading")

        # Navigate to the BestBuy product page (this can be dynamically provided)
        url = "https://www.bestbuy.com/site/msi-nvidia-geforce-rtx-4060-8gb-ventus-2x-oc-8gb-gddr6-pci-express-4-0-graphics-card-black/6548653.p?skuId=6548653"
        page.goto(url)
        print("page directed to bestbuy link")

        # Extract SKU from the URL
        sku_id = re.search(r"skuId=(\d+)", url).group(1)
        print(f"Extracted SKU: {sku_id}")

        # Handle region selection (if applicable)
        try:
            us_link = page.locator("a.us-link:has-text('United States')").first
            if us_link.is_visible(timeout=5000):
                us_link.click()
                print("Clicked on 'United States' region")
                time.sleep(3)
        except Exception as e:
            print("Region selection not required or failed:", e)

        # Find the Add to Cart button using the SKU ID
        try:
            add_to_cart_button = page.wait_for_selector(f"button[data-sku-id='{sku_id}'].add-to-cart-button", timeout=10000)
            if add_to_cart_button.is_visible() and add_to_cart_button.is_enabled():
                add_to_cart_button.click()
                print("Add-to-Cart button clicked.")

                # Wait for the cart to update (wait for any cart-link update)
                try:
                    page.wait_for_selector("a.cart-link", timeout=10000)  # Check if cart icon appears
                    print("Cart updated.")
                    bought = 1
                except Exception as e:
                    print(f"Error confirming cart update: {e}")
                    page.screenshot(path="cart_update_error.png")
            else:
                print("Add-to-Cart button is not clickable or visible.")
                page.screenshot(path="add_to_cart_button_error.png")
        except Exception as e:
            print(f"Error confirming cart update: {e}")
            page.screenshot(path="cart_update_error.png")

        # Redirect to the cart page after adding to cart
        if bought == 1:
            try:
                print("Attempting to redirect to the cart page...")
                page.goto("https://www.bestbuy.com/cart", timeout=120000, wait_until="networkidle")  # Increase timeout to 120 seconds and wait until network is idle
                print("Redirected to the cart page.")
            except Exception as e:
                print(f"Error navigating to the cart page: {e}")
                page.screenshot(path="cart_navigation_error.png")







#not yet done/updated
        # Continue to checkout
        page.wait_for_selector(".checkout-buttons__checkout").click()
        print("Checkout button was clicked.")

        # Continue as guest
        page.wait_for_selector(".button-wrap").click()
        print("Continue-as-guest button was clicked.")

        # Fill in email and phone number
        page.fill("#user\\.emailAddress", "your_email@gmail.com")
        print("Email input in the form.")
        page.fill("#user\\.phone", "123456789")
        print("Phone input in the form.")

        # Continue to payment
        page.locator(".button--continue").click()
        print("Continue-to-payment-information button was clicked.")

        # Enter credit card information
        page.fill("#optimized-cc-card-number", "1234567890123456")
        page.fill("[name='expiration-month']", "01")
        page.fill("[name='expiration-year']", "25")
        page.fill("#credit-card-cvv", "999")
        print("Credit card information input in the form.")

        # Enter billing address
        page.fill("#payment\\.billingAddress\\.firstName", "Ming Shun")
        page.fill("#payment\\.billingAddress\\.lastName", "Ong")
        page.fill("#payment\\.billingAddress\\.street", "BoonLay")
        page.fill("#payment\\.billingAddress\\.city", "Singapore")
        page.fill("#payment\\.billingAddress\\.state", "Singapore")
        page.fill("#payment\\.billingAddress\\.zipcode", "051732")
        print("Billing Address input in the form.")
